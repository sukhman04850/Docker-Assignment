// <auto-generated />
using System;
using Data_Access_Layer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access_Layer.Migrations
{
    [DbContext(typeof(ExpenseDbContext))]
    partial class ExpenseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shared_Layer.Models.ExpenseGroup", b =>
                {
                    b.Property<Guid>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.ToTable("ExpenseGroup");
                });

            modelBuilder.Entity("Shared_Layer.Models.ExpenseShare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ExpenseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseId");

                    b.ToTable("ExpenseShare");
                });

            modelBuilder.Entity("Shared_Layer.Models.Expenses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExpenseGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Shared_Layer.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d536f330-75e0-40bb-85f0-1382e52068fb"),
                            Email = "pratham@mail.com",
                            IsAdmin = false,
                            Name = "Pratham",
                            Password = "deShkG1VmAgpwRunldaazYxyZ4qaSZL4fDID74wjHhUaOLkv"
                        },
                        new
                        {
                            Id = new Guid("56228dd4-476f-4b78-8ff2-02fe0d19605c"),
                            Email = "madhur@mail.com",
                            IsAdmin = false,
                            Name = "Madhur",
                            Password = "deShkG1VmAgpwRunldaazYxyZ4qaSZL4fDID74wjHhUaOLkv"
                        },
                        new
                        {
                            Id = new Guid("cfe0f938-ed43-4f6e-ba79-50b020ad48d1"),
                            Email = "sukhman@mail.com",
                            IsAdmin = true,
                            Name = "Sukhman",
                            Password = "deShkG1VmAgpwRunldaazYxyZ4qaSZL4fDID74wjHhUaOLkv"
                        },
                        new
                        {
                            Id = new Guid("2c5dbe1c-7c76-4092-9646-044590a03fb4"),
                            Email = "swapnil@mail.com",
                            IsAdmin = false,
                            Name = "Swapnil",
                            Password = "deShkG1VmAgpwRunldaazYxyZ4qaSZL4fDID74wjHhUaOLkv"
                        },
                        new
                        {
                            Id = new Guid("78fbedff-11bd-4891-882c-3bc160bf1077"),
                            Email = "shivansh@mail.com",
                            IsAdmin = false,
                            Name = "Shivansh",
                            Password = "deShkG1VmAgpwRunldaazYxyZ4qaSZL4fDID74wjHhUaOLkv"
                        },
                        new
                        {
                            Id = new Guid("bc8ca678-2dce-43c9-a568-72d53485c0f2"),
                            Email = "rishhav@mail.com",
                            IsAdmin = false,
                            Name = "Rishav",
                            Password = "deShkG1VmAgpwRunldaazYxyZ4qaSZL4fDID74wjHhUaOLkv"
                        },
                        new
                        {
                            Id = new Guid("6da84bd1-877f-4d9c-b724-e6438bce5036"),
                            Email = "ryan@mail.com",
                            IsAdmin = false,
                            Name = "Ryan",
                            Password = "deShkG1VmAgpwRunldaazYxyZ4qaSZL4fDID74wjHhUaOLkv"
                        });
                });

            modelBuilder.Entity("UserExpenseGroup", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserExpenseGroup");
                });

            modelBuilder.Entity("Shared_Layer.Models.ExpenseShare", b =>
                {
                    b.HasOne("Shared_Layer.Models.Expenses", "Expense")
                        .WithMany("ExpenseShares")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("Shared_Layer.Models.Expenses", b =>
                {
                    b.HasOne("Shared_Layer.Models.ExpenseGroup", "ExpenseGroup")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared_Layer.Models.Users", "User")
                        .WithMany("Expenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserExpenseGroup", b =>
                {
                    b.HasOne("Shared_Layer.Models.ExpenseGroup", null)
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared_Layer.Models.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shared_Layer.Models.ExpenseGroup", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("Shared_Layer.Models.Expenses", b =>
                {
                    b.Navigation("ExpenseShares");
                });

            modelBuilder.Entity("Shared_Layer.Models.Users", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
